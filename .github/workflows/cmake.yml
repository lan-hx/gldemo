name: CMake

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            qt_arch: win64_msvc2019_64
          - os: ubuntu-latest
            triplet: x64-linux
            qt_arch: gcc_64
#          - os: macos-latest
#            triplet: x64-osx

    env:
      # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
      BUILD_TYPE: Debug
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

#      - uses: lukka/get-cmake@latest
#      - name: dir
#        run: find $RUNNER_WORKSPACE
#        shell: bash

      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          # vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.4.*'
#          host: 'windows'
          target: 'desktop'
          arch: '${{ matrix.qt_arch }}'
          dir: '${{ github.workspace }}/'
          install-deps: 'true'
#          modules: ''
          cached: 'false'
          setup-python: 'true'
          set-env: 'true'
          tools-only: 'false'

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DQT_PREFIX_DIR=${{env.Qt6_DIR}} -DVCPKG_DIR=${{github.workspace}}/vcpkg

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target gldemo

      - name: Deploy
        continue-on-error: true
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target deploy

  #     - name: Test
  #       working-directory: ${{github.workspace}}/build
  #       # Execute tests defined by the CMake configuration.
  #       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
  #       run: ctest -C ${{env.BUILD_TYPE}}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          # Artifact name
          name: output-${{ matrix.os }}
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ${{github.workspace}}/build/
        
